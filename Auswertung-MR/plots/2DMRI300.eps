%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/2DMRI300.tex
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Mon Aug 10 17:49:02 2020
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plots/2DMRI300.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug 10 17:49:02 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .125 .25 .375 .5 .625 .75 .875 1 ] def
/RedA [0 0 0 0 .5 1 1 1 .5 ] def
/GreenA [0 0 .5 1 1 1 .5 0 0 ] def
/BlueA [.5 1 1 1 .5 0 0 0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
% Begin plot #1
1.000 UL
LTw
LCw setrgbcolor
[] 0 setdash
LCb setrgbcolor
1.000 UL
LTw
LCw setrgbcolor
[] 0 setdash
LCb setrgbcolor
%pm3d_map_begin
.0894 g 5642 994 N 0 -212 334 0 0 212 h
.1215 g 5309 994 N 0 -212 333 0 0 212 h
.0796 g 4976 994 N 0 -212 333 0 0 212 h
.0509 g 4643 994 N 0 -212 333 0 0 212 h
.0896 g 4310 994 N 0 -212 333 0 0 212 h
.0949 g 3977 994 N 0 -212 333 0 0 212 h
.0756 g 3644 994 N 0 -212 333 0 0 212 h
.0991 g 3312 994 N 0 -212 332 0 0 212 h
.1026 g 2979 994 N 0 -212 333 0 0 212 h
.0694 g 2646 994 N 0 -212 333 0 0 212 h
.0467 g 2313 994 N 0 -212 333 0 0 212 h
.0459 g 1979 994 N 0 -212 334 0 0 212 h
.0439 g 1646 994 N 0 -212 333 0 0 212 h
.0383 g 1313 994 N 0 -212 333 0 0 212 h
.0391 g 980 994 N 0 -212 333 0 0 212 h
.1199 g 5642 1206 N 0 -211 334 0 0 211 h
.1227 g 5309 1206 N 0 -211 333 0 0 211 h
.0588 g 4976 1206 N 0 -211 333 0 0 211 h
.0436 g 4643 1206 N 0 -211 333 0 0 211 h
.075 g 4310 1206 N 0 -211 333 0 0 211 h
.0695 g 3977 1206 N 0 -211 333 0 0 211 h
.0561 g 3644 1206 N 0 -211 333 0 0 211 h
.073 g 3312 1206 N 0 -211 332 0 0 211 h
.0963 g 2979 1206 N 0 -211 333 0 0 211 h
.078 g 2646 1206 N 0 -211 333 0 0 211 h
.0587 g 2313 1206 N 0 -211 333 0 0 211 h
.0477 g 1979 1206 N 0 -211 334 0 0 211 h
.048 g 1646 1206 N 0 -211 333 0 0 211 h
.0654 g 1313 1206 N 0 -211 333 0 0 211 h
.0675 g 980 1206 N 0 -211 333 0 0 211 h
.1071 g 5642 1417 N 0 -212 334 0 0 212 h
.1081 g 5309 1417 N 0 -212 333 0 0 212 h
.0621 g 4976 1417 N 0 -212 333 0 0 212 h
.0877 g 4643 1417 N 0 -212 333 0 0 212 h
.1297 g 4310 1417 N 0 -212 333 0 0 212 h
.1094 g 3977 1417 N 0 -212 333 0 0 212 h
.0638 g 3644 1417 N 0 -212 333 0 0 212 h
.0524 g 3312 1417 N 0 -212 332 0 0 212 h
.0791 g 2979 1417 N 0 -212 333 0 0 212 h
.0749 g 2646 1417 N 0 -212 333 0 0 212 h
.085 g 2313 1417 N 0 -212 333 0 0 212 h
.0705 g 1979 1417 N 0 -212 334 0 0 212 h
.0455 g 1646 1417 N 0 -212 333 0 0 212 h
.0643 g 1313 1417 N 0 -212 333 0 0 212 h
.0802 g 980 1417 N 0 -212 333 0 0 212 h
.107 g 5642 1629 N 0 -211 334 0 0 211 h
.1023 g 5309 1629 N 0 -211 333 0 0 211 h
.0904 g 4976 1629 N 0 -211 333 0 0 211 h
.1319 g 4643 1629 N 0 -211 333 0 0 211 h
.1843 g 4310 1629 N 0 -211 333 0 0 211 h
.1514 g 3977 1629 N 0 -211 333 0 0 211 h
.0791 g 3644 1629 N 0 -211 333 0 0 211 h
.0555 g 3312 1629 N 0 -211 332 0 0 211 h
.0792 g 2979 1629 N 0 -211 333 0 0 211 h
.0855 g 2646 1629 N 0 -211 333 0 0 211 h
.0909 g 2313 1629 N 0 -211 333 0 0 211 h
.0791 g 1979 1629 N 0 -211 334 0 0 211 h
.067 g 1646 1629 N 0 -211 333 0 0 211 h
.061 g 1313 1629 N 0 -211 333 0 0 211 h
.0617 g 980 1629 N 0 -211 333 0 0 211 h
.1261 g 5642 1840 N 0 -212 334 0 0 212 h
.0851 g 5309 1840 N 0 -212 333 0 0 212 h
.0732 g 4976 1840 N 0 -212 333 0 0 212 h
.1142 g 4643 1840 N 0 -212 333 0 0 212 h
.1497 g 4310 1840 N 0 -212 333 0 0 212 h
.1299 g 3977 1840 N 0 -212 333 0 0 212 h
.0987 g 3644 1840 N 0 -212 333 0 0 212 h
.0833 g 3312 1840 N 0 -212 332 0 0 212 h
.0877 g 2979 1840 N 0 -212 333 0 0 212 h
.0871 g 2646 1840 N 0 -212 333 0 0 212 h
.0628 g 2313 1840 N 0 -212 333 0 0 212 h
.0585 g 1979 1840 N 0 -212 334 0 0 212 h
.0885 g 1646 1840 N 0 -212 333 0 0 212 h
.0742 g 1313 1840 N 0 -212 333 0 0 212 h
.0414 g 980 1840 N 0 -212 333 0 0 212 h
.1038 g 5642 2052 N 0 -212 334 0 0 212 h
.0548 g 5309 2052 N 0 -212 333 0 0 212 h
.0773 g 4976 2052 N 0 -212 333 0 0 212 h
.2151 g 4643 2052 N 0 -212 333 0 0 212 h
.3262 g 4310 2052 N 0 -212 333 0 0 212 h
.2874 g 3977 2052 N 0 -212 333 0 0 212 h
.182 g 3644 2052 N 0 -212 333 0 0 212 h
.1089 g 3312 2052 N 0 -212 332 0 0 212 h
.0951 g 2979 2052 N 0 -212 333 0 0 212 h
.1064 g 2646 2052 N 0 -212 333 0 0 212 h
.1012 g 2313 2052 N 0 -212 333 0 0 212 h
.0776 g 1979 2052 N 0 -212 334 0 0 212 h
.091 g 1646 2052 N 0 -212 333 0 0 212 h
.1028 g 1313 2052 N 0 -212 333 0 0 212 h
.0532 g 980 2052 N 0 -212 333 0 0 212 h
.0789 g 5642 2264 N 0 -211 334 0 0 211 h
.0362 g 5309 2264 N 0 -211 333 0 0 211 h
.1242 g 4976 2264 N 0 -211 333 0 0 211 h
.4269 g 4643 2264 N 0 -211 333 0 0 211 h
.7026 g 4310 2264 N 0 -211 333 0 0 211 h
.6442 g 3977 2264 N 0 -211 333 0 0 211 h
.3075 g 3644 2264 N 0 -211 333 0 0 211 h
.0773 g 3312 2264 N 0 -211 332 0 0 211 h
.1555 g 2979 2264 N 0 -211 333 0 0 211 h
.3055 g 2646 2264 N 0 -211 333 0 0 211 h
.3021 g 2313 2264 N 0 -211 333 0 0 211 h
.1421 g 1979 2264 N 0 -211 334 0 0 211 h
.0803 g 1646 2264 N 0 -211 333 0 0 211 h
.1139 g 1313 2264 N 0 -211 333 0 0 211 h
.0603 g 980 2264 N 0 -211 333 0 0 211 h
.0743 g 5642 2475 N 0 -211 334 0 0 211 h
.0532 g 5309 2475 N 0 -211 333 0 0 211 h
.1639 g 4976 2475 N 0 -211 333 0 0 211 h
.5331 g 4643 2475 N 0 -211 333 0 0 211 h
.8714 g 4310 2475 N 0 -211 333 0 0 211 h
.8025 g 3977 2475 N 0 -211 333 0 0 211 h
.3526 g 3644 2475 N 0 -211 333 0 0 211 h
.0969 g 3312 2475 N 0 -211 332 0 0 211 h
.3333 g 2979 2475 N 0 -211 333 0 0 211 h
.6028 g 2646 2475 N 0 -211 333 0 0 211 h
.5342 g 2313 2475 N 0 -211 333 0 0 211 h
.2281 g 1979 2475 N 0 -211 334 0 0 211 h
.07 g 1646 2475 N 0 -211 333 0 0 211 h
.0786 g 1313 2475 N 0 -211 333 0 0 211 h
.0486 g 980 2475 N 0 -211 333 0 0 211 h
.0757 g 5642 2686 N 0 -212 334 0 0 212 h
.0685 g 5309 2686 N 0 -212 333 0 0 212 h
.1547 g 4976 2686 N 0 -212 333 0 0 212 h
.455 g 4643 2686 N 0 -212 333 0 0 212 h
.7055 g 4310 2686 N 0 -212 333 0 0 212 h
.6153 g 3977 2686 N 0 -212 333 0 0 212 h
.2605 g 3644 2686 N 0 -212 333 0 0 212 h
.1417 g 3312 2686 N 0 -212 332 0 0 212 h
.4589 g 2979 2686 N 0 -212 333 0 0 212 h
.7233 g 2646 2686 N 0 -212 333 0 0 212 h
.6023 g 2313 2686 N 0 -212 333 0 0 212 h
.2628 g 1979 2686 N 0 -212 334 0 0 212 h
.0607 g 1646 2686 N 0 -212 333 0 0 212 h
.0351 g 1313 2686 N 0 -212 333 0 0 212 h
.0329 g 980 2686 N 0 -212 333 0 0 212 h
.1064 g 5642 2898 N 0 -211 334 0 0 211 h
.0674 g 5309 2898 N 0 -211 333 0 0 211 h
.0984 g 4976 2898 N 0 -211 333 0 0 211 h
.2544 g 4643 2898 N 0 -211 333 0 0 211 h
.3669 g 4310 2898 N 0 -211 333 0 0 211 h
.2914 g 3977 2898 N 0 -211 333 0 0 211 h
.1324 g 3644 2898 N 0 -211 333 0 0 211 h
.1495 g 3312 2898 N 0 -211 332 0 0 211 h
.3903 g 2979 2898 N 0 -211 333 0 0 211 h
.5752 g 2646 2898 N 0 -211 333 0 0 211 h
.4847 g 2313 2898 N 0 -211 333 0 0 211 h
.2048 g 1979 2898 N 0 -211 334 0 0 211 h
.0494 g 1646 2898 N 0 -211 333 0 0 211 h
.0342 g 1313 2898 N 0 -211 333 0 0 211 h
.0355 g 980 2898 N 0 -211 333 0 0 211 h
.1242 g 5642 3109 N 0 -212 334 0 0 212 h
.0696 g 5309 3109 N 0 -212 333 0 0 212 h
.0635 g 4976 3109 N 0 -212 333 0 0 212 h
.1169 g 4643 3109 N 0 -212 333 0 0 212 h
.1676 g 4310 3109 N 0 -212 333 0 0 212 h
.1444 g 3977 3109 N 0 -212 333 0 0 212 h
.113 g 3644 3109 N 0 -212 333 0 0 212 h
.1637 g 3312 3109 N 0 -212 332 0 0 212 h
.2511 g 2979 3109 N 0 -212 333 0 0 212 h
.3014 g 2646 3109 N 0 -212 333 0 0 212 h
.26 g 2313 3109 N 0 -212 333 0 0 212 h
.1206 g 1979 3109 N 0 -212 334 0 0 212 h
.0486 g 1646 3109 N 0 -212 333 0 0 212 h
.0412 g 1313 3109 N 0 -212 333 0 0 212 h
.0367 g 980 3109 N 0 -212 333 0 0 212 h
.0949 g 5642 3321 N 0 -211 334 0 0 211 h
.061 g 5309 3321 N 0 -211 333 0 0 211 h
.0412 g 4976 3321 N 0 -211 333 0 0 211 h
.0917 g 4643 3321 N 0 -211 333 0 0 211 h
.1743 g 4310 3321 N 0 -211 333 0 0 211 h
.1614 g 3977 3321 N 0 -211 333 0 0 211 h
.0967 g 3644 3321 N 0 -211 333 0 0 211 h
.122 g 3312 3321 N 0 -211 332 0 0 211 h
.1605 g 2979 3321 N 0 -211 333 0 0 211 h
.1397 g 2646 3321 N 0 -211 333 0 0 211 h
.1173 g 2313 3321 N 0 -211 333 0 0 211 h
.089 g 1979 3321 N 0 -211 334 0 0 211 h
.05 g 1646 3321 N 0 -211 333 0 0 211 h
.0252 g 1313 3321 N 0 -211 333 0 0 211 h
.0286 g 980 3321 N 0 -211 333 0 0 211 h
.1237 g 5642 3532 N 0 -212 334 0 0 212 h
.0745 g 5309 3532 N 0 -212 333 0 0 212 h
.0442 g 4976 3532 N 0 -212 333 0 0 212 h
.091 g 4643 3532 N 0 -212 333 0 0 212 h
.1725 g 4310 3532 N 0 -212 333 0 0 212 h
.1615 g 3977 3532 N 0 -212 333 0 0 212 h
.0868 g 3644 3532 N 0 -212 333 0 0 212 h
.0828 g 3312 3532 N 0 -212 332 0 0 212 h
.1025 g 2979 3532 N 0 -212 333 0 0 212 h
.082 g 2646 3532 N 0 -212 333 0 0 212 h
.0711 g 2313 3532 N 0 -212 333 0 0 212 h
.0985 g 1979 3532 N 0 -212 334 0 0 212 h
.0759 g 1646 3532 N 0 -212 333 0 0 212 h
.0346 g 1313 3532 N 0 -212 333 0 0 212 h
.0519 g 980 3532 N 0 -212 333 0 0 212 h
.1664 g 5642 3744 N 0 -212 334 0 0 212 h
.1146 g 5309 3744 N 0 -212 333 0 0 212 h
.0943 g 4976 3744 N 0 -212 333 0 0 212 h
.096 g 4643 3744 N 0 -212 333 0 0 212 h
.1002 g 4310 3744 N 0 -212 333 0 0 212 h
.1125 g 3977 3744 N 0 -212 333 0 0 212 h
.1192 g 3644 3744 N 0 -212 333 0 0 212 h
.1084 g 3312 3744 N 0 -212 332 0 0 212 h
.0741 g 2979 3744 N 0 -212 333 0 0 212 h
.0487 g 2646 3744 N 0 -212 333 0 0 212 h
.0697 g 2313 3744 N 0 -212 333 0 0 212 h
.1281 g 1979 3744 N 0 -212 334 0 0 212 h
.1151 g 1646 3744 N 0 -212 333 0 0 212 h
.0721 g 1313 3744 N 0 -212 333 0 0 212 h
.0707 g 980 3744 N 0 -212 333 0 0 212 h
.138 g 5642 3956 N 0 -211 334 0 0 211 h
.1182 g 5309 3956 N 0 -211 333 0 0 211 h
.121 g 4976 3956 N 0 -211 333 0 0 211 h
.1097 g 4643 3956 N 0 -211 333 0 0 211 h
.0733 g 4310 3956 N 0 -211 333 0 0 211 h
.0826 g 3977 3956 N 0 -211 333 0 0 211 h
.1055 g 3644 3956 N 0 -211 333 0 0 211 h
.1058 g 3312 3956 N 0 -211 332 0 0 211 h
.0672 g 2979 3956 N 0 -211 333 0 0 211 h
.0429 g 2646 3956 N 0 -211 333 0 0 211 h
.0756 g 2313 3956 N 0 -211 333 0 0 211 h
.1272 g 1979 3956 N 0 -211 334 0 0 211 h
.1052 g 1646 3956 N 0 -211 333 0 0 211 h
.084 g 1313 3956 N 0 -211 333 0 0 211 h
.0687 g 980 3956 N 0 -211 333 0 0 211 h
%pm3d_map_end
LTw
% End plot #1
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
936 4322 M
936 938 L
5328 0 V
stroke
LTb
936 938 M
0 71 V
stroke
1.000 UL
LTb
1824 938 M
0 71 V
stroke
1.000 UL
LTb
2712 938 M
0 71 V
stroke
1.000 UL
LTb
3600 938 M
0 71 V
stroke
1.000 UL
LTb
4488 938 M
0 71 V
stroke
1.000 UL
LTb
5376 938 M
0 71 V
stroke
1.000 UL
LTb
6264 938 M
0 71 V
stroke
1.000 UL
LTb
936 938 M
112 0 V
stroke
1.000 UL
LTb
936 1502 M
112 0 V
stroke
1.000 UL
LTb
936 2066 M
112 0 V
stroke
1.000 UL
LTb
936 2630 M
112 0 V
stroke
1.000 UL
LTb
936 3194 M
112 0 V
stroke
1.000 UL
LTb
936 3758 M
112 0 V
stroke
1.000 UL
LTb
936 4322 M
112 0 V
stroke
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6397 938 translate 266 3384 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
6397 938 N
266 0 V
0 3384 V
-266 0 V
0 -3384 V
Z stroke
1.000 UL
LTb
1.000 UL
LTb
6663 938 M
-63 0 V
stroke
6663 1421 M
-63 0 V
stroke
6663 1904 M
-63 0 V
stroke
6663 2388 M
-63 0 V
stroke
6663 2871 M
-63 0 V
stroke
6663 3355 M
-63 0 V
stroke
6663 3838 M
-63 0 V
stroke
6663 4322 M
-63 0 V
stroke
1.000 UP
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
